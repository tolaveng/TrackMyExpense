<MudAppBar Elevation="1">
    @if (ShowToggleIcon)
    {
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    }
    <a href="/"><img src="/img/TrackMyExpense.svg" style="width: auto; height: 22px;"/></a>
    <MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex justify-end pr-5">
        <AuthorizeView>
            <Authorized>
                <MudAvatar Color="Color.Primary">@context.User.Identity.Name.ToUpper()[0]</MudAvatar>
                <MudText Color="Color.Primary">@context.User.Identity.Name</MudText>
                <MudLink Href="/account/logout"><span class="oi oi-power-standby" aria-hidden="true"></span> Log Out</MudLink>
            </Authorized>
            <NotAuthorized>
                <MudButton Variant="Variant.Outlined" Color="Color.Primary" Link="/account/login">Log In <MudIcon Icon="@Icons.Filled.Login"/></MudButton>
                <span class="px-2" />
                <MudButton Variant="Variant.Outlined" Color="Color.Primary" Link="/account/register">Get Free Account <MudIcon Icon="@Icons.Filled.AccountCircle"/></MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudContainer>
</MudAppBar>

@code {
    [Parameter]
    public bool DrawerOpen { get; set; } = false;

    [Parameter]
    public bool ShowToggleIcon { get; set; } = true;

    [Parameter]
    public EventCallback<bool> OnDrawerToggle { get; set; }

    public async Task DrawerToggle()
    {
        DrawerOpen = !DrawerOpen;
        await OnDrawerToggle.InvokeAsync(DrawerOpen);
    }
}